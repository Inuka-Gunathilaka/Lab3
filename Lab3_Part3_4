#if CONFIG_FREERTOS_UNICORE
static const BaseType_t app_cpu = 0
#else
static const BaseType_t app_cpu = 1;
#endif

static const int built_in_led = 2;
int toggle_delay = 0;

void get_Serial_Input(void *parameters){
  int delay_var;
  while(1){
    if(Serial.available() > 0){
      delay_var = Serial.parseInt();
      if(delay_var != 0){
        toggle_delay = delay_var;
      }
      Serial.println(toggle_delay);
    }
  }
  
}

void Blink_LED(void *parameters){
  while(1){
    digitalWrite(built_in_led, HIGH);
    vTaskDelay(toggle_delay / portTICK_PERIOD_MS);
    digitalWrite(built_in_led, LOW);
    vTaskDelay(toggle_delay / portTICK_PERIOD_MS);
  }
 
}

void setup() {
  Serial.begin(115200);
  Serial.println("Enter Delay Input");
  pinMode(built_in_led, OUTPUT);
  vTaskDelay(1000 / portTICK_PERIOD_MS);

  
  xTaskCreatePinnedToCore(
             get_Serial_Input, 
             "Get Serial Input", 
             1024, 
             NULL, 
             1, 
             NULL, 
             app_cpu); 
             
  xTaskCreatePinnedToCore(
             Blink_LED, 
             "Blink LED", 
             1024, 
             NULL, 
             1, 
             NULL,
             app_cpu); 
}

void loop() {
  // put your main code here, to run repeatedly:

}
