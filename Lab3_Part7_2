#include <WiFi.h>

const char *ssid     = "EN20388720";
const char *password = "123456789";

const char LED1 = 5;
const char LED2 = 18;

TaskHandle_t Handle1;
TaskHandle_t Handle2;

WiFiServer server(80);

void Connect_WIFI(void *parameters){
    Serial.print("Connecting to ");
    Serial.println(ssid);

    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }

    Serial.println("");
    Serial.println("WiFi connected.");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());
    vTaskDelete(Handle1);
}


void Control_LED(void *parameters){
  server.begin();
  WiFiClient client = server.available();   

  if (client) {               
    Serial.println("New Client.");           
    String currentLine = "";               
    while (client.connected()) {          
      if (client.available()) {            
        char c = client.read();            
        Serial.write(c);                   
        if (c == '\n') {                   

          if (currentLine.length() == 0) {
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();

            // the content of the HTTP response follows the header:
            client.print("Click <a href=\"/H1\">here</a> to turn the LED1 ON<br>");
            client.print("Click <a href=\"/L1\">here</a> to turn the LED1 OFF<br>");

            client.print("Click <a href=\"/H2\">here</a> to turn the LED2 ON<br>");
            client.print("Click <a href=\"/L2\">here</a> to turn the LED2 OFF<br>");

            client.println();
            break;
          } else {   
            currentLine = "";
          }
        } else if (c != '\r') {  
          currentLine += c;   
        }

        if (currentLine.endsWith("GET /H1")) {
          digitalWrite(LED1, HIGH);               
        }
        if (currentLine.endsWith("GET /L1")) {
          digitalWrite(LED1, LOW);               
        }
      }

        if (currentLine.endsWith("GET /H2")) {
          digitalWrite(LED2, HIGH);              
        }
        if (currentLine.endsWith("GET /L2")) {
          digitalWrite(LED2, LOW);              
        }
      }
    }else if(!client){
      Serial.println("No Client");
    }
    client.stop();
    Serial.println("Client Disconnected");
   
}


void setup()
{
    Serial.begin(115200);
    pinMode(LED1, OUTPUT);      
    pinMode(LED2, OUTPUT);
    delay(10);

  xTaskCreatePinnedToCore(
    Connect_WIFI,
    "Connect to WIFI",
    1024,
    NULL,
    1,
    &Handle1,
    0);
    
  xTaskCreatePinnedToCore(
    Control_LED,
    "Control LED",
    1024,
    NULL,
    1,
    &Handle2,
    1);

}

int value = 0;

void loop(){
  delay(1);
}
